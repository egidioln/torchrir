name: Deploy Sphinx to GitHub Pages

on:
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/configure-pages@v5
    - uses: sphinx-doc/github-problem-matcher@master
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: "Set up Python"
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"
  
    - name: Install the project
      run: |
        uv sync --group docs
        uv pip install .
        
   
    - name: "Build docs"
      run: |
        cd docs
        make html SPHINXBUILD='uv run sphinx-build'
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/build/html

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
